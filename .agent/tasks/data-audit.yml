name: data-audit
description: Audit training data quality and schema compliance

steps:
  - name: check-parquet
    run: |
      if [ ! -f data/processed/train.parquet ]; then
        echo "Error: train.parquet not found. Run 'moola ingest' first."
        exit 1
      fi
    description: Verify parquet file exists

  - name: audit-schema
    run: |
      python3 <<EOF
      import pandas as pd
      from moola.schema import TrainingDataRow

      df = pd.read_parquet("data/processed/train.parquet")

      print(f"Shape: {df.shape}")
      print(f"Columns: {list(df.columns)}")
      print(f"Dtypes:\n{df.dtypes}")
      print(f"\nLabel distribution:\n{df['label'].value_counts()}")
      print(f"\nMissing values:\n{df.isnull().sum()}")

      # Validate first 5 rows against schema
      print("\nValidating first 5 rows against TrainingDataRow schema...")
      for i, row in df.head().iterrows():
          TrainingDataRow(**row.to_dict())
      print("Schema validation passed!")
      EOF
    description: Audit schema and data quality
    depends_on: [check-parquet]

  - name: feature-stats
    run: |
      python3 <<EOF
      import pandas as pd
      import numpy as np

      df = pd.read_parquet("data/processed/train.parquet")
      features = np.array(df["features"].tolist())

      print(f"\nFeature array shape: {features.shape}")
      print(f"Feature mean: {features.mean():.4f}")
      print(f"Feature std: {features.std():.4f}")
      print(f"Feature min: {features.min():.4f}")
      print(f"Feature max: {features.max():.4f}")
      EOF
    description: Calculate feature statistics
    depends_on: [audit-schema]

outputs:
  - stdout (audit report)

notes: |
  Audits data/processed/train.parquet for:
  - Schema compliance with TrainingDataRow
  - Missing values
  - Label distribution
  - Feature statistics (mean, std, min, max)
