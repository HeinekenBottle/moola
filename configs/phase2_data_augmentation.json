{
  "description": "Phase 2 Data Augmentation Optimizations for BiLSTM Dual-Task Model (60-65% → 70-75% target)",
  "reference": "Temporal jittering + magnitude warping for 3x effective dataset augmentation on 174 samples",
  "model": {
    "architecture": "enhanced_simple_lstm",
    "input_dim": 11,
    "hidden_size": 128,
    "num_layers": 1,
    "num_heads": 2,
    "dropout": 0.5,
    "recurrent_dropout": 0.6,
    "use_uncertainty_weighting": true,
    "use_latent_mixup": true,
    "predict_pointers": true
  },

  "training": {
    "batch_size": 29,
    "learning_rate": 0.0003,
    "n_epochs": 300,
    "early_stopping_patience": 20,
    "max_grad_norm": 1.5,

    "optimizer": {
      "type": "Adam",
      "comment": "Layer-specific weight decay for differential regularization",
      "weight_decay": {
        "encoder": 0.001,
        "attention": 0.0001,
        "heads": 0.01
      }
    },

    "validation": {
      "val_split": 0.15,
      "use_temporal_split": true
    }
  },

  "augmentation": {
    "enabled": true,
    "comment": "PHASE 2: Temporal jittering + magnitude warping for 3x effective dataset size",
    "temporal_jittering": {
      "enabled": true,
      "sigma": 0.03,
      "prob": 0.8,
      "description": "Add Gaussian noise (3% std) to 80% of training samples. Preserves pattern integrity (correlation > 0.95)"
    },
    "magnitude_warping": {
      "enabled": true,
      "sigma": 0.2,
      "n_knots": 4,
      "prob": 0.5,
      "description": "Smooth amplitude scaling via cubic spline (4 knots, 20% variation) on 50% of samples"
    },
    "latent_mixup": {
      "enabled": true,
      "alpha": 0.4,
      "prob": 0.5,
      "description": "Apply mixup in latent space (after encoder) for additional regularization"
    },
    "deprecated": {
      "scaling_prob": 0.0,
      "time_warp_prob": 0.0,
      "comment": "Replaced by magnitude_warping for better control and smoother curves"
    },
    "effective_multiplier": "~3x (174 → ~520 samples per epoch)",
    "expected_gain": "+4-6% accuracy improvement"
  },

  "loss": {
    "pointer_loss": "huber",
    "pointer_encoding": "center_length",
    "huber_delta": 0.08,
    "focal_gamma": 2.0,
    "class_weights": [1.0, 1.17],
    "manual_weights": {
      "loss_alpha": 1.0,
      "loss_beta": 0.7
    },
    "uncertainty_weighting": {
      "enabled": true,
      "comment": "PHASE 2: Enable learnable task weights to auto-balance classification vs pointer tasks"
    }
  },

  "data": {
    "dataset_size": 174,
    "train_samples": 148,
    "val_samples": 26,
    "features": "11D RelativeTransform",
    "sequence_length": 105,
    "augmentation_note": "Effective training samples: ~520/epoch (3x multiplier from jitter + warp)"
  },

  "expected_improvements": {
    "phase1_performance": {
      "val_accuracy": "60-65%",
      "train_accuracy": "70-75%",
      "overfitting_gap": "8-10%"
    },
    "phase2_target": {
      "val_accuracy_range": [0.70, 0.75],
      "train_val_gap": "5-8%",
      "hit_at_pm3": ">60%",
      "pointer_convergence": "stable",
      "augmentation_contribution": "+4-6% from temporal augmentation"
    }
  },

  "key_changes": [
    "PHASE 2: Temporal jittering (σ=0.03, prob=0.8) - preserves patterns while adding noise robustness",
    "PHASE 2: Magnitude warping (4 knots, σ=0.2, prob=0.5) - smooth amplitude scaling curves",
    "PHASE 2: Latent mixup (α=0.4, prob=0.5) - mixup after encoder for additional regularization",
    "PHASE 2: Uncertainty weighting enabled - auto-balances classification vs pointer tasks",
    "PHASE 2: Center-length pointer encoding - better gradient flow than start-end encoding",
    "Effective dataset size: 174 → ~520 samples per epoch (3x multiplier)",
    "Deprecated: scaling_prob, time_warp_prob (replaced by magnitude_warping)"
  ],

  "usage": {
    "command": "python -m moola.cli train --model enhanced_simple_lstm --predict-pointers --device cuda --split data/artifacts/splits/v1/fold_0.json --use-temporal-aug --jitter-sigma 0.03 --magnitude-warp-prob 0.5",
    "notes": [
      "Requires GPU for reasonable training time (~60min on RTX 4090 with augmentation)",
      "Augmentation is applied during training only (not validation)",
      "Monitor augmentation quality: correlation between original and augmented should be > 0.90",
      "If overfitting persists, increase jitter_prob to 0.9 or magnitude_warp_prob to 0.7"
    ]
  },

  "validation": {
    "pattern_preservation": {
      "jitter_correlation_threshold": 0.95,
      "warp_correlation_threshold": 0.90,
      "combined_correlation_threshold": 0.90
    },
    "augmentation_effectiveness": {
      "min_diversity": "70% of augmented samples should differ by >5% from original",
      "max_diversity": "95% of augmented samples should maintain correlation >0.85 with original"
    }
  }
}
